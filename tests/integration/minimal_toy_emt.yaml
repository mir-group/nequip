run: [train, test]

seed: 1
cutoff_radius: 5.0
chemical_symbols: [Cu]
model_type_names: ${chemical_symbols}

dataloader:
  _target_: torch.utils.data.DataLoader
  batch_size: 5

data:
  _target_: nequip.data.datamodule.NequIPDataModule
  seed: ${seed}
  split_dataset:
    dataset:
      _target_: nequip.data.dataset.EMTTestDataset
      transforms:
        - _target_: nequip.data.transforms.NeighborListTransform
          r_max: ${cutoff_radius}
        - _target_: nequip.data.transforms.ChemicalSpeciesToAtomTypeMapper
          chemical_symbols: ${chemical_symbols}
      supercell: [4, 4, 4]
      seed: ${seed}
      num_frames: 50
      element: Cu
    train: 30
    val: 10
    test: 10
  train_dataloader: ${dataloader}
  val_dataloader: ${dataloader}
  test_dataloader: ${dataloader}
  stats_manager:
    _target_: nequip.data.CommonDataStatisticsManager
    type_names: ${model_type_names}

trainer:
  _target_: lightning.Trainer
  max_epochs: 5
  check_val_every_n_epoch: 1
  log_every_n_steps: 5
  callbacks:
    - _target_: lightning.pytorch.callbacks.ModelCheckpoint
      monitor: val0_epoch/weighted_sum
      dirpath: ${hydra:runtime.output_dir}
      filename: best
      save_last: true
    - _target_: nequip.train.callbacks.TestTimeXYZFileWriter
      out_file: ${hydra:runtime.output_dir}/test
      output_fields_from_original_dataset: [total_energy, forces, stress]
      chemical_symbols: ${chemical_symbols}
    - _target_: nequip.train.callbacks.LossCoefficientMonitor
      interval: epoch
      frequency: 1
    - _target_: nequip.train.callbacks.LossCoefficientScheduler
      schedule:
        2:
          per_atom_energy_mse: 1.0
          forces_mse: 2.0
          stress_mse: 1.0
        4:
          per_atom_energy_mse: 2.0
          forces_mse: 1.0
          stress_mse: 1.0

num_features: 16

training_module:
  _target_: nequip.train.EMALightningModule
  loss:
    _target_: nequip.train.EnergyForceStressLoss
    per_atom_energy: true
    coeffs:
      total_energy: 1.0
      forces: 1.0
      stress: 1.0
  val_metrics:
    _target_: nequip.train.EnergyForceStressMetrics
    coeffs:
      total_energy_mae: 1.0
      forces_mae: 1.0
      stress_mae: 1.0
  train_metrics: ${training_module.val_metrics}
  test_metrics: ${training_module.val_metrics}
  optimizer:
    _target_: torch.optim.Adam
    lr: 0.01
  model:
    _target_: nequip.model.NequIPGNNModel
    # basic model params
    seed: ${seed}
    model_dtype: float64
    type_names: ${model_type_names}
    r_max: ${cutoff_radius}
    # general model params
    l_max: 1
    parity: true
    num_layers: 3
    num_features: ${num_features}
    radial_mlp_depth: 1
    # !! test `int_div` resolver !!
    radial_mlp_width: ${int_div:${num_features},${oc.env:TEST_VAL_TWO}}
    # data-dependent model params
    per_type_energy_shifts: ${training_data_stats:per_atom_energy_mean}
    per_type_energy_scales: ${training_data_stats:forces_rms}
    avg_num_neighbors: ${training_data_stats:num_neighbors_mean}

global_options:
  allow_tf32: false